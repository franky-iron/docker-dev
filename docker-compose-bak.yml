version: '3'

services:
    nginx:
#        depends_on:
#            - nginx-proxy
        build: ./docker/nginx
        container_name: nginx
        expose:
            - 80
            - 8088
        ports:
            - "80:80"
            - "8088:8088"
            - "8089:8089"
            - "8071:8071"
        volumes:
            - ../sites:/app
            - ./sites/phpinfo:/phpinfo
            - ./docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/etc/conf.d/upstream.conf:/etc/nginx/conf.d/upstream.conf
            - ./docker/nginx/etc/sites-enabled/:/etc/nginx/sites-enabled/
            - ./docker/nginx/etc/local-sites-enabled/:/etc/nginx/local-sites-enabled/
        environment:
            VIRTUAL_HOST: phpinfo.test.com,bbs.yunya.com,rest-bbs.yunya.com,code.yunya.com,m.yunya.com,s.yunya.com,sv.yunya.com,u.yunya.com,wx-fission.yunya.com,rest-u.yunya.com,rest-xue.yunya.com,xue.yunya.com,admin-bor.yunya.com,rest-bor.yunya.com,static-bor.yunya.com,sites.yunya.com,phpinfo.yunya.com,my-shop.yunya.com,admin-shop.yunya.com,front-shop.yunya.com,frontes-shop.yunya.com,html5-shop.yunya.com,rest-shop.yunya.com,api-shop.yunya.com,img-shop.yunya.com,img2-shop.yunya.com,img3-shop.yunya.com,img4-shop.yunya.com,img5-shop.yunya.com
        restart: always
        networks:
            default:
                aliases:
                    - bbs.yunya.com
                    - rest-bbs.yunya.com
                    - code.yunya.com
                    - m.yunya.com
                    - s.yunya.com
                    - sv.yunya.com
                    - u.yunya.com
                    - rest-u.yunya.com
                    - rest-xue.yunya.com
                    - xue.yunya.com
                    - my-shop.yunya.com
                    - admin-shop.yunya.com
                    - front-shop.yunya.com
                    - phpinfo.test.com
    php:
        build: ./docker/php7-fpm
        container_name: php
        expose:
            - 8080
        ports:
            - "8080:8080"
            - "9000:9000"
        volumes:
            - ../sites:/app
            - ./sites/phpinfo:/phpinfo
            #- ./bin/composer:/usr/local/bin/composer
            #- ./docker/php7-fpm/etc/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            #- ./docker/php7-fpm/etc/php.ini:/usr/local/etc/php/php.ini
            #- ./docker/php7-fpm/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
        #extra_hosts:
        #    - "xunsearch:192.168.1.185"
        restart: always

    redis:
        build: ./docker/redis
        container_name: redis
        volumes:
            - ./docker/redis/redis.conf:/etc/redis/redis.conf
            - ./docker/redis/data:/data
        expose:
            - 6379
        ports:
            - "6379:6379"
        restart: always

    mysql:
       build: ./docker/mysql
       container_name: mysql
       volumes:
           #- ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
           - ./docker/mysql/data:/var/mysql/data
           - ./docker/mysql/log:/var/mysql/log
           - ./docker/mysql/mysql-files:/var/mysql/mysql-files
       expose:
           - 3306
       ports:
           - "3306:3306"
       environment:
            MYSQL_ROOT_PASSWORD: root
       restart: always

    golang:
        build: ./docker/golang
        container_name: golang
        volumes:
            - ../go:/go
        expose:
            - 8099
        ports:
            - "8099:8099"
        tty: true
        links:
            - "mysql"
            - "redis"
        restart: always

#    nginx-proxy:
#        image: jwilder/nginx-proxy
#        restart: always
#        ports:
#            - "80:80"
#        volumes:
#

    beanstalkd:
        build: ./docker/beanstalkd
        container_name: beanstalkd
        expose:
            - 11300
        ports:
            - "11300:11300"
        restart: always

    beanstalkd-console:
        build: ./docker/beanstalkd-console
        container_name: beanstalkd-console
        expose:
            - 2080
        ports:
            - "2080:2080"
        links:
            - "beanstalkd"
        restart: always

    elasticsearch:
        build: ./docker/elasticsearch
        container_name: elasticsearch
        expose:
            - 9200
            - 9300
        environment:
            discovery.type: single-node
    rabbitmq:
        build: ./docker/rabbitmq
        container_name: rabbitmq
        expose:
            - 5672
            - 15672
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=admin
        ports:
            - "15672:15672"   # web UI 管理接口
            - "5672:5672"   # 生产者和消费者连接使用的接口
        volumes:
            - ./docker/rabbitmq/log:/var/log/rabbitmq #挂载 RabbitMQ日志
            - ./docker/rabbitmq/data:/var/lib/rabbitmq #挂载 RabbitMQ数据
        hostname: rabbitmqhostone

networks:
   default_network:
       external: true
